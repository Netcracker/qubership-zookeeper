//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// Code generated by controller-gen. DO NOT EDIT.

package v1

import (
	corev1 "k8s.io/api/core/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupDaemon) DeepCopyInto(out *BackupDaemon) {
	*out = *in
	in.Affinity.DeepCopyInto(&out.Affinity)
	if in.Tolerations != nil {
		in, out := &in.Tolerations, &out.Tolerations
		*out = make([]corev1.Toleration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	in.BackupStorage.DeepCopyInto(&out.BackupStorage)
	in.Resources.DeepCopyInto(&out.Resources)
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = new(S3)
		**out = **in
	}
	in.SecurityContext.DeepCopyInto(&out.SecurityContext)
	if in.CustomLabels != nil {
		in, out := &in.CustomLabels, &out.CustomLabels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	out.BackupDaemonSsl = in.BackupDaemonSsl
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupDaemon.
func (in *BackupDaemon) DeepCopy() *BackupDaemon {
	if in == nil {
		return nil
	}
	out := new(BackupDaemon)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupDaemonSsl) DeepCopyInto(out *BackupDaemonSsl) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupDaemonSsl.
func (in *BackupDaemonSsl) DeepCopy() *BackupDaemonSsl {
	if in == nil {
		return nil
	}
	out := new(BackupDaemonSsl)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackupDaemonStatus) DeepCopyInto(out *BackupDaemonStatus) {
	*out = *in
	if in.Nodes != nil {
		in, out := &in.Nodes, &out.Nodes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackupDaemonStatus.
func (in *BackupDaemonStatus) DeepCopy() *BackupDaemonStatus {
	if in == nil {
		return nil
	}
	out := new(BackupDaemonStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Diagnostics) DeepCopyInto(out *Diagnostics) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Diagnostics.
func (in *Diagnostics) DeepCopy() *Diagnostics {
	if in == nil {
		return nil
	}
	out := new(Diagnostics)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Global) DeepCopyInto(out *Global) {
	*out = *in
	if in.CustomLabels != nil {
		in, out := &in.CustomLabels, &out.CustomLabels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.DefaultLabels != nil {
		in, out := &in.DefaultLabels, &out.DefaultLabels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	out.ZooKeeperSsl = in.ZooKeeperSsl
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Global.
func (in *Global) DeepCopy() *Global {
	if in == nil {
		return nil
	}
	out := new(Global)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationTests) DeepCopyInto(out *IntegrationTests) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationTests.
func (in *IntegrationTests) DeepCopy() *IntegrationTests {
	if in == nil {
		return nil
	}
	out := new(IntegrationTests)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Monitoring) DeepCopyInto(out *Monitoring) {
	*out = *in
	in.Affinity.DeepCopyInto(&out.Affinity)
	if in.Tolerations != nil {
		in, out := &in.Tolerations, &out.Tolerations
		*out = make([]corev1.Toleration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	in.Resources.DeepCopyInto(&out.Resources)
	in.SecurityContext.DeepCopyInto(&out.SecurityContext)
	if in.CustomLabels != nil {
		in, out := &in.CustomLabels, &out.CustomLabels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Monitoring.
func (in *Monitoring) DeepCopy() *Monitoring {
	if in == nil {
		return nil
	}
	out := new(Monitoring)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MonitoringStatus) DeepCopyInto(out *MonitoringStatus) {
	*out = *in
	if in.Nodes != nil {
		in, out := &in.Nodes, &out.Nodes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MonitoringStatus.
func (in *MonitoringStatus) DeepCopy() *MonitoringStatus {
	if in == nil {
		return nil
	}
	out := new(MonitoringStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3) DeepCopyInto(out *S3) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3.
func (in *S3) DeepCopy() *S3 {
	if in == nil {
		return nil
	}
	out := new(S3)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecretPaths) DeepCopyInto(out *SecretPaths) {
	*out = *in
	if in.Monitoring != nil {
		in, out := &in.Monitoring, &out.Monitoring
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecretPaths.
func (in *SecretPaths) DeepCopy() *SecretPaths {
	if in == nil {
		return nil
	}
	out := new(SecretPaths)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotStorage) DeepCopyInto(out *SnapshotStorage) {
	*out = *in
	if in.StorageClass != nil {
		in, out := &in.StorageClass, &out.StorageClass
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotStorage.
func (in *SnapshotStorage) DeepCopy() *SnapshotStorage {
	if in == nil {
		return nil
	}
	out := new(SnapshotStorage)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ssl) DeepCopyInto(out *Ssl) {
	*out = *in
	if in.CipherSuites != nil {
		in, out := &in.CipherSuites, &out.CipherSuites
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ssl.
func (in *Ssl) DeepCopy() *Ssl {
	if in == nil {
		return nil
	}
	out := new(Ssl)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatusCondition) DeepCopyInto(out *StatusCondition) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatusCondition.
func (in *StatusCondition) DeepCopy() *StatusCondition {
	if in == nil {
		return nil
	}
	out := new(StatusCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Storage) DeepCopyInto(out *Storage) {
	*out = *in
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Nodes != nil {
		in, out := &in.Nodes, &out.Nodes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ClassName != nil {
		in, out := &in.ClassName, &out.ClassName
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Storage.
func (in *Storage) DeepCopy() *Storage {
	if in == nil {
		return nil
	}
	out := new(Storage)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VaultSecretManagement) DeepCopyInto(out *VaultSecretManagement) {
	*out = *in
	in.SecretPaths.DeepCopyInto(&out.SecretPaths)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VaultSecretManagement.
func (in *VaultSecretManagement) DeepCopy() *VaultSecretManagement {
	if in == nil {
		return nil
	}
	out := new(VaultSecretManagement)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VaultSecretManagementStatus) DeepCopyInto(out *VaultSecretManagementStatus) {
	*out = *in
	if in.SecretVersions != nil {
		in, out := &in.SecretVersions, &out.SecretVersions
		*out = make(map[string]int, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VaultSecretManagementStatus.
func (in *VaultSecretManagementStatus) DeepCopy() *VaultSecretManagementStatus {
	if in == nil {
		return nil
	}
	out := new(VaultSecretManagementStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZooKeeper) DeepCopyInto(out *ZooKeeper) {
	*out = *in
	in.Affinity.DeepCopyInto(&out.Affinity)
	if in.Tolerations != nil {
		in, out := &in.Tolerations, &out.Tolerations
		*out = make([]corev1.Toleration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	in.Storage.DeepCopyInto(&out.Storage)
	in.SnapshotStorage.DeepCopyInto(&out.SnapshotStorage)
	in.Resources.DeepCopyInto(&out.Resources)
	in.Ssl.DeepCopyInto(&out.Ssl)
	in.SecurityContext.DeepCopyInto(&out.SecurityContext)
	if in.EnvironmentVariables != nil {
		in, out := &in.EnvironmentVariables, &out.EnvironmentVariables
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.CustomLabels != nil {
		in, out := &in.CustomLabels, &out.CustomLabels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	out.Diagnostics = in.Diagnostics
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZooKeeper.
func (in *ZooKeeper) DeepCopy() *ZooKeeper {
	if in == nil {
		return nil
	}
	out := new(ZooKeeper)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZooKeeperService) DeepCopyInto(out *ZooKeeperService) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZooKeeperService.
func (in *ZooKeeperService) DeepCopy() *ZooKeeperService {
	if in == nil {
		return nil
	}
	out := new(ZooKeeperService)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ZooKeeperService) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZooKeeperServiceList) DeepCopyInto(out *ZooKeeperServiceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ZooKeeperService, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZooKeeperServiceList.
func (in *ZooKeeperServiceList) DeepCopy() *ZooKeeperServiceList {
	if in == nil {
		return nil
	}
	out := new(ZooKeeperServiceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ZooKeeperServiceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZooKeeperServiceSpec) DeepCopyInto(out *ZooKeeperServiceSpec) {
	*out = *in
	if in.Global != nil {
		in, out := &in.Global, &out.Global
		*out = new(Global)
		(*in).DeepCopyInto(*out)
	}
	if in.ZooKeeper != nil {
		in, out := &in.ZooKeeper, &out.ZooKeeper
		*out = new(ZooKeeper)
		(*in).DeepCopyInto(*out)
	}
	if in.Monitoring != nil {
		in, out := &in.Monitoring, &out.Monitoring
		*out = new(Monitoring)
		(*in).DeepCopyInto(*out)
	}
	if in.BackupDaemon != nil {
		in, out := &in.BackupDaemon, &out.BackupDaemon
		*out = new(BackupDaemon)
		(*in).DeepCopyInto(*out)
	}
	if in.VaultSecretManagement != nil {
		in, out := &in.VaultSecretManagement, &out.VaultSecretManagement
		*out = new(VaultSecretManagement)
		(*in).DeepCopyInto(*out)
	}
	if in.IntegrationTests != nil {
		in, out := &in.IntegrationTests, &out.IntegrationTests
		*out = new(IntegrationTests)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZooKeeperServiceSpec.
func (in *ZooKeeperServiceSpec) DeepCopy() *ZooKeeperServiceSpec {
	if in == nil {
		return nil
	}
	out := new(ZooKeeperServiceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZooKeeperServiceStatus) DeepCopyInto(out *ZooKeeperServiceStatus) {
	*out = *in
	in.ZooKeeperStatus.DeepCopyInto(&out.ZooKeeperStatus)
	in.MonitoringStatus.DeepCopyInto(&out.MonitoringStatus)
	in.BackupDaemonStatus.DeepCopyInto(&out.BackupDaemonStatus)
	in.VaultSecretManagementStatus.DeepCopyInto(&out.VaultSecretManagementStatus)
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]StatusCondition, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZooKeeperServiceStatus.
func (in *ZooKeeperServiceStatus) DeepCopy() *ZooKeeperServiceStatus {
	if in == nil {
		return nil
	}
	out := new(ZooKeeperServiceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZooKeeperSsl) DeepCopyInto(out *ZooKeeperSsl) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZooKeeperSsl.
func (in *ZooKeeperSsl) DeepCopy() *ZooKeeperSsl {
	if in == nil {
		return nil
	}
	out := new(ZooKeeperSsl)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZooKeeperStatus) DeepCopyInto(out *ZooKeeperStatus) {
	*out = *in
	if in.Servers != nil {
		in, out := &in.Servers, &out.Servers
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZooKeeperStatus.
func (in *ZooKeeperStatus) DeepCopy() *ZooKeeperStatus {
	if in == nil {
		return nil
	}
	out := new(ZooKeeperStatus)
	in.DeepCopyInto(out)
	return out
}
